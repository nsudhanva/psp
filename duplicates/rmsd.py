import Bio.PDB
import math
import numpy as np
import pandas as pd

# 1.74 102l_A ALALYSSER	42	44	
# atoms_1 = ['N', 'CA', 'C', 'O', 'CB', 'N', 'CA', 'C', 'O', 'CB', 'CG', 'CD', 'CE', 'NZ', 'N', 'CA', 'C', 'O', 'CB', 'OG']
# X_1 = ['36.228', '36.872', '37.431', '37.346', '38.018', '38.089', '38.683', '37.624', '37.780', '39.583', '40.944', '41.700', '43.191', '43.990', '36.501', '35.355', '34.784', '34.574', '34.339', '33.113']	
# Y_1 = ['27.971', '26.701', '26.052', '24.837', '26.854', '26.850', '26.280', '25.781', '24.779', '27.272', '27.265', '28.478', '28.429', '29.087', '26.455', '26.129', '24.766', '23.887', '27.285', '27.025']	
# Z_1 = ['22.983', '22.726', '23.970', '24.174', '21.743', '24.780', '25.960', '26.942', '27.629', '26.600', '25.975', '26.428', '26.169', '27.218', '26.891', '27.710', '27.289', '28.118', '27.581', '28.211']	
# 1.74	102l_A	ALALYSSER	134	136	
# atoms_2 = ['N', 'CA', 'C', 'O', 'CB', 'N', 'CA', 'C', 'O', 'CB', 'CG', 'CD', 'CE', 'NZ', 'N', 'CA', 'C', 'O', 'CB', 'OG']	
# X_2 = ['32.839', '33.860', '33.276', '33.960', '34.822', '32.017', '31.395', '30.767', '29.546', '30.310', '30.849', '29.732', '30.257', '29.387', '31.614', '31.134', '32.145', '33.329', '31.047', '32.338']	
# Y_2 = ['12.681', '13.714', '15.077', '16.072', '13.191', '15.134', '16.432', '17.037', '17.073', '16.220', '15.506', '15.312', '14.888', '13.885', '17.460', '17.955', '18.956', '18.936', '16.771', '16.138']	
# Z_2 = ['-6.114', '-6.421', '-6.758', '-6.684', '-7.502', '-7.131', '-7.464', '-6.240', '-6.063', '-8.482', '-9.695', '-10.698', '-12.053', '-12.677', '-5.344', '-4.098', '-3.574', '-3.926', '-3.114', '-2.989']	

# 1	102l_A	VALILETHR	57	59	
# ['N', 'CA', 'C', 'O', 'CB', 'CG1', 'CG2', 'N', 'CA', 'C', 'O', 'CB', 'CG1', 'CG2', 'CD1', 'N', 'CA', 'C', 'O', 'CB', 'OG1', 'CG2']	

X_1 = ['45.243', '46.136', '45.654', '45.295', '47.559', '48.414', '48.146', '45.670', '45.198', '46.294', '47.276', '43.858', '44.014', '42.737', '42.835', '46.136', '47.082', '46.627', '45.501', '47.257', '46.088', '47.511']	
X_2 = ['22.120', '20.988', '19.677', '19.637', '21.311', '20.057', '22.379', '18.571', '17.301', '16.287', '16.573', '16.876', '16.658', '17.891', '15.945', '15.134', '14.037', '13.090', '13.174', '13.297', '12.532', '14.306']
Y_1 = ['26.443', '26.160', '26.835', '28.020', '26.624', '26.561', '25.720', '26.095', '26.630', '26.447', '25.754', '25.969', '24.426', '26.320', '23.771', '27.088', '27.006', '25.913', '25.420', '28.368', '28.670', '29.480']	
# 1.74	102l_A	VALILETHR	149	151	
# ['N', 'CA', 'C', 'O', 'CB', 'CG1', 'CG2', 'N', 'CA', 'C', 'O', 'CB', 'CG1', 'CG2', 'CD1', 'N', 'CA', 'C', 'O', 'CB', 'OG1', 'CG2']

Y_2 = ['38.990', '37.689', '36.969', '36.379', '36.859', '35.444', '37.553', '37.062', '36.474', '37.068', '36.315', '36.402', '35.458', '36.001', '35.673', '38.392', '39.075', '38.626', '38.473', '40.602', '40.929', '41.226']	
Z_1 = ['8.102', '7.507', '6.937', '5.838', '8.490', '7.989', '8.735', '7.710', '7.376', '6.123', '5.351', '8.543', '9.686', '7.959', '11.009', '5.927', '4.738', '3.529', '2.466', '4.872', '5.779', '3.508']	
Z_2 = ['0.648', '1.003', '-0.218', '-0.206', '1.774', '1.953', '3.110', '-1.307', '-2.606', '-3.210', '-3.777', '-3.655', '-3.211', '-5.027', '-3.917', '-3.080', '-3.566', '-2.787', '-3.357', '-3.564', '-4.579', '-3.880']	
# 1.74

X_1 = [float(i) for i in X_1]
X_1 = np.array(X_1) 
X_2 = [float(i) for i in X_2]
X_2 = np.array(X_2)
# X_1 = (X_1 ** 2).mean()
# X_2 = (X_2 ** 2).mean()
X = math.sqrt(((X_1 - X_2) ** 2).mean())
X = ((X_1 - X_2) ** 2)

Y_1 = [float(i) for i in Y_1]
Y_1 = np.array(Y_1)
Y_2 = [float(i) for i in Y_2]
Y_2 = np.array(Y_2)
# Y_1 = (Y_1 ** 2).mean()
# Y_2 = (Y_2 ** 2).mean()
Y = math.sqrt(((Y_1 - Y_2) ** 2).mean())
Y = ((Y_1 - Y_2) ** 2)

Z_1 = [float(i) for i in Z_1]
Z_1 = np.array(Z_1)
Z_2 = [float(i) for i in Z_2]
Z_2 = np.array(Z_2)
# Z_1 = (Z_1 ** 2).mean()
# Z_2 = (Z_2 ** 2).mean()
Z = math.sqrt(((Z_1 - Z_2) ** 2).mean())
Z = ((Z_1 - Z_2) ** 2)

atom_no = len(X) + len(Y) + len(Z)

# rmsd = math.sqrt(((X_1 - X_2) + (Y_1 - Y_2) + (Z_1 - Z_2)))
rmsd = math.sqrt((X + Y + Z).mean())
print(rmsd/atom_no)

# num = np.array([-2, 5, -8, 9, -4])
# num = math.sqrt((num ** 2).mean())
# print(num)